$properties: fill stroke color border-color background-color;

// Iterate through brand-colors map to create colors for classes
@each $color-name, $color in $brand-colors {
  // Iterate through properties var to create properties for classes
  @each $property in $properties {
    // We want to use 'bg' for the class name when using the
    // background-color property
    //
    // We want to use 'border' for the class name when using the
    // border-color property
    //
    // Else just use the regular property name
    @if $property == background-color {
      .#{$esg-prefix}-brand-bg-#{$color-name} {
        #{$property}: map-get($brand-colors, $color-name) !important;
      }
    }
    @else if $property == border-color {
      .#{$esg-prefix}-brand-border-#{$color-name} {
        #{$property}: map-get($brand-colors, $color-name) !important;
      }
    }
    @else {
      .#{$esg-prefix}-brand-#{$property}-#{$color-name} {
        #{$property}: map-get($brand-colors, $color-name) !important;
      }
    }
  }
}

// Iterate through ui-colors map to create colors for classes
@each $color-name, $color in $ui-colors {
  // Iterate through properties var to create properties for classes
  @each $property in $properties {
    // We want to use 'bg' for the class name when using the
    // background-color property
    //
    // We want to use 'border' for the class name when using the
    // border-color property
    //
    // Else just use the regular property name
    @if $property == background-color {
      .#{$esg-prefix}-bg-#{$color-name} {
        #{$property}: map-get($ui-colors, $color-name);
      }
    }
    @else if $property == border-color {
      .#{$esg-prefix}-border-#{$color-name} {
        #{$property}: map-get($ui-colors, $color-name) !important;
      }
    }
    @else {
      .#{$esg-prefix}-#{$property}-#{$color-name} {
        #{$property}: map-get($ui-colors, $color-name) !important;
      }
    }
  }
}

// Iterate through gray-colors map to create colors for classes
@each $color-name, $color in $gray-colors {
  // Iterate through properties var to create properties for classes
  @each $property in $properties {
    // We want to use 'bg' for the class name when using the
    // background-color property
    //
    // We want to use 'border' for the class name when using the
    // border-color property
    //
    // Else just use the regular property name
    @if $property == background-color {
      .#{$esg-prefix}-bg-#{$color-name} {
        #{$property}: map-get($gray-colors, $color-name);
      }
    }
    @else if $property == border-color {
      .#{$esg-prefix}-border-#{$color-name} {
        #{$property}: map-get($gray-colors, $color-name) !important;
      }
    }
    @else {
      .#{$property}-#{$color-name} {
        #{$property}: map-get($gray-colors, $color-name);
      }
    }
  }
}

// Iterate through text-colors map to create colors for classes
@each $color-name, $color in $text-colors {
  // Iterate through properties var to create properties for classes
  @each $property in $properties {
    // We want to use 'bg' for the class name when using the
    // background-color property
    //
    // We want to use 'border' for the class name when using the
    // border-color property
    //
    // Else just use the regular property name
    @if $property == background-color {
      .#{$esg-prefix}-text-bg-#{$color-name} {
        #{$property}: map-get($text-colors, $color-name) !important;
      }
    }
    @else if $property == border-color {
      .#{$esg-prefix}-text-border-#{$color-name} {
        #{$property}: map-get($text-colors, $color-name) !important;
      }
    }
    @else {
      .#{$esg-prefix}-text-#{$property}-#{$color-name} {
        #{$property}: map-get($text-colors, $color-name);
      }
    }
  }
}

// Iterate through topic-colors map to create colors for classes
@each $color-name, $color in $topic-colors {
  @each $color-value, $color-hex in $color {
    // Iterate through properties var to create properties for classes
    @each $property in $properties {
      // We want to use 'bg' for the class name when using the
      // background-color property
      //
      // We want to use 'border' for the class name when using the
      // border-color property
      //
      // Else just use the regular property name
      @if $property == background-color {
        .#{$esg-prefix}-topic-bg-#{$color-name}-#{$color-value} {
          #{$property}: map-get($color, $color-value) !important;
        }
      }
      @else if $property == border-color {
        .#{$esg-prefix}-topic-border-#{$color-name}-#{$color-value} {
          #{$property}: map-get($color, $color-value) !important;
        }
      }
      @else {
        .#{$esg-prefix}-topic-#{$property}-#{$color-name}-#{$color-value} {
          #{$property}: map-get($color, $color-value) !important;
        }
      }
    }
  }
}
